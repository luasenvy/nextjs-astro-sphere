@import "tailwindcss";
@import "tw-animate-css";

@plugin "@tailwindcss/typography";

@custom-variant dark (&:where(.dark, .dark *));

@theme inline {
  --animate-twinkle: twinkle 2s ease-in-out forwards;
  --animate-meteor: meteor 3s ease-in-out forwards;

  --animate-animateParticle-100: animateParticle 100s linear infinite;
  --animate-animateParticle-150: animateParticle 150s linear infinite;

  @keyframes twinkle {
    0% {
      opacity: 0;
      transform: rotate(0deg);
    }
    50% {
      opacity: 1;
      transform: rotate(180deg);
    }
    100% {
      opacity: 0;
      transform: rotate(360deg);
    }
  }

  @keyframes meteor {
    0% {
      opacity: 0;
      transform: translateY(200%);
    }
    50% {
      opacity: 1;
    }
    100% {
      opacity: 0;
      transform: translateY(0);
    }
  }

  /** Light theme particles on home page */
  @keyframes animateParticle {
    from {
      transform: translateY(0px);
    }

    to {
      transform: translateY(-2000px);
    }
  }
}

@layer base {
  ::view-transition-old(root) {
    animation: 160ms cubic-bezier(0.4, 0, 1, 1) both fade-out;
  }

  ::view-transition-new(root) {
    animation: 160ms cubic-bezier(0, 0, 0.2, 1) both fade-in;
  }

  html {
    @apply overflow-x-hidden;

    overflow-y: scroll;
    color-scheme: light;
    background-color: white;
    scroll-padding-top: 4.5rem;
  }

  html.dark {
    color-scheme: dark;
    background-color: black;
  }

  html,
  body {
    @apply h-full w-full antialiased;
    @apply bg-white dark:bg-black;
    @apply text-black/75 dark:text-white/75;
  }

  body {
    @apply relative flex flex-col;
  }

  main {
    @apply flex flex-col flex-1 bg-white dark:bg-black;
  }

  article {
    @apply prose dark:prose-invert max-w-full pb-12;
  }

  .page-heading {
    @apply font-semibold text-black dark:text-white;
  }

  .blend {
    @apply transition-all duration-300 ease-in-out;
  }

  article img {
    padding-top: 20px;
    padding-bottom: 20px;
    display: block;
    margin: 0 auto;
  }

  button:not([disabled]),
  [role="button"]:not([disabled]) {
    cursor: pointer;
  }
}
